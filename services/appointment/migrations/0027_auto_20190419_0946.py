# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2019-04-19 09:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import his.framework.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('curator', '0002_remove_userdetail_date_joined'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0039_applicationdefaultrole'),
        ('appointment', '0026_swapshiftbroadcast_swapshiftbroadcastactionlog'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField()),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='curator.CuratorChannel')),
            ],
            options={
                'verbose_name': 'Division, ...',
            },
        ),
        migrations.CreateModel(
            name='ClientServiceSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_slot', models.IntegerField(default=0)),
                ('end_slot', models.IntegerField(default=0)),
                ('slot', his.framework.models.fields.EnumField(his.framework.models.fields._DummyEnum, blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_slot', to='appointment.Client')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Position')),
            ],
            options={
                'verbose_name': 'ตารางเวลา Division, ...',
            },
        ),
        migrations.CreateModel(
            name='ClientType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('na', 'na'), ('division', 'division')], default='na', max_length=32)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField()),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='curator.CuratorChannel')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'พยาบาล, ...',
            },
        ),
        migrations.CreateModel(
            name='ProviderAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='วันที่เริ่มต้นบันทึก')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='วันที่แก้ไขล่าสุด')),
                ('status', his.framework.models.fields._StatableStatusField(default=0, editable=False)),
                ('finalize', models.BooleanField(default=False, help_text='Draft(False) -> Confirm(True) -> Draft(True) -> Confirm(True)                                               Draft(False) -> Confirm(True) -> Draft(True) -> Cancel(False)')),
                ('type', his.framework.models.fields.EnumField(his.framework.models.fields._DummyEnum, blank=True, null=True)),
                ('incharge', models.BooleanField(default=False, help_text='หัวหน้าเวร(1 กะ มีได้ 1 คน)')),
                ('slot_status', his.framework.models.fields.EnumField(his.framework.models.fields._DummyEnum, default=1)),
                ('service_capacity', models.IntegerField(default=0, help_text='0 = ไม่กำหนด', verbose_name='สามารถทำนัดหมายได้กี่รายการ')),
                ('source', models.IntegerField(default=0, verbose_name='id DoctorWorkSchedule')),
                ('client_service_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assign_client_slot', to='appointment.ClientServiceSlot')),
                ('edit_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='ผู้บันทึก')),
            ],
            options={
                'verbose_name': 'ตารางเวร',
            },
        ),
        migrations.CreateModel(
            name='ProviderAssignActionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', his.framework.models.fields.EnumField(his.framework.models.fields._DummyEnum)),
                ('datetime', models.DateTimeField(auto_now=True)),
                ('note', models.TextField(blank=True)),
                ('statable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='appointment.ProviderAssign')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Provider Assign Action Log',
            },
        ),
        migrations.CreateModel(
            name='ProviderAvailableSlot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_slot', models.IntegerField(db_index=True, default=0)),
                ('end_slot', models.IntegerField(db_index=True, default=0)),
                ('active', models.BooleanField(default=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_slot', to='appointment.Provider')),
            ],
            options={
                'verbose_name': 'ตารางเวลาพยาบาล, ...',
            },
        ),
        migrations.CreateModel(
            name='ProviderType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('na', 'na'), ('caddy', 'caddy'), ('technician', 'technician'), ('golf_course', 'golf_course'), ('customer_house', 'customer_house')], default='na', max_length=32)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SwapShiftRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='วันที่เริ่มต้นบันทึก')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='วันที่แก้ไขล่าสุด')),
                ('status', his.framework.models.fields._StatableStatusField(default=0, editable=False)),
            ],
            options={
                'verbose_name': 'รายการขอแลกเวร',
            },
        ),
        migrations.CreateModel(
            name='SwapShiftRequestActionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', his.framework.models.fields.EnumField(his.framework.models.fields._DummyEnum)),
                ('datetime', models.DateTimeField(auto_now=True)),
                ('note', models.TextField(blank=True)),
                ('statable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='appointment.SwapShiftRequest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Swap Shift Request Action Log',
            },
        ),
        migrations.AlterField(
            model_name='appointmenttype',
            name='provider_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appointment.ProviderType'),
        ),
        migrations.RemoveField(
            model_name='appointmentusertimeslot',
            name='provider_assign'
        ),
        migrations.AddField(
            model_name='appointmentusertimeslot',
            name='provider_assign',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_provider_assign', to='appointment.ProviderAssign'),
        ),
        migrations.RemoveField(
            model_name='appointmentusertimeslot',
            name='provider_available_slot'
        ),
        migrations.AddField(
            model_name='appointmentusertimeslot',
            name='provider_available_slot',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='appointment.ProviderAvailableSlot'),
        ),
        migrations.RemoveField(
            model_name='serviceappointment',
            name='client'
        ),
        migrations.AddField(
            model_name='serviceappointment',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appointment.Client'),
        ),
        migrations.RemoveField(
            model_name='serviceappointment',
            name='provider'
        ),
        migrations.AddField(
            model_name='serviceappointment',
            name='provider',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appointment.Provider'),
        ),
        migrations.RemoveField(
            model_name='swapshiftbroadcast',
            name='source_provider_assign'
        ),
        migrations.AddField(
            model_name='swapshiftbroadcast',
            name='source_provider_assign',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_pa', to='appointment.ProviderAssign'),
        ),
        migrations.AddField(
            model_name='swapshiftrequest',
            name='broadcast',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='swap_req', to='appointment.SwapShiftBroadcast'),
        ),
        migrations.AddField(
            model_name='swapshiftrequest',
            name='destination_assign_slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_swap', to='appointment.ProviderAssign'),
        ),
        migrations.AddField(
            model_name='swapshiftrequest',
            name='edit_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='ผู้บันทึก'),
        ),
        migrations.AddField(
            model_name='swapshiftrequest',
            name='source_assign_slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_swap', to='appointment.ProviderAssign'),
        ),
        migrations.AddField(
            model_name='providerassign',
            name='provider_available_slots',
            field=models.ManyToManyField(related_name='assign_provider_slot', to='appointment.ProviderAvailableSlot'),
        ),
        migrations.AddField(
            model_name='provider',
            name='provider_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appointment.ProviderType'),
        ),
        migrations.AddField(
            model_name='client',
            name='client_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appointment.ClientType'),
        ),
        migrations.AddField(
            model_name='client',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
    ]

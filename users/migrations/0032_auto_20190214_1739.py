# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2019-02-14 17:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import his.framework.validators


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0031_merge_20190116_1624'),
    ]

    operations = [
        migrations.CreateModel(
            name='APIToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
            ],
            options={
                'verbose_name': 'API token',
                'verbose_name_plural': 'API tokens',
            },
        ),
        migrations.CreateModel(
            name='MobileDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(blank=True, default='', max_length=64)),
                ('device_type', models.CharField(blank=True, choices=[('ios', 'ios'), ('android', 'android'), ('etc', 'etc'), ('browser', 'browser')], db_index=True, max_length=10, null=True)),
                ('device_name', models.CharField(blank=True, default='', max_length=64)),
                ('device_token', models.CharField(blank=True, default='', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_authorized', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Inactive devices will not be sent notifications', verbose_name='Is active')),
                ('api_token', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device', related_query_name='device', to='users.APIToken')),
            ],
            options={
                'verbose_name': 'device',
                'verbose_name_plural': 'devices',
            },
        ),
        migrations.CreateModel(
            name='UserOTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(max_length=4, verbose_name='reference')),
                ('password', models.CharField(max_length=6, verbose_name='Password')),
                ('expired_at', models.DateTimeField(db_index=True, verbose_name='expired at')),
                ('is_used', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user OTP',
                'verbose_name_plural': 'user OTPs',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pre_name', models.IntegerField(blank=True, choices=[(0, 'OTHER'), (1, 'MR'), (2, 'MS'), (3, 'Mrs')], default=0, help_text="user's pre name")),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'UNKNOWN'), (1, 'MALE'), (2, 'FEMALE')], default=0, help_text="user's gender")),
                ('first_name', models.CharField(blank=True, default='', help_text="user's first name", max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, default='', help_text="user's last name", max_length=150, verbose_name='last name')),
                ('dob', models.DateField(blank=True, help_text='date of birth (YYYY-mm-dd)', null=True, verbose_name='date of birth')),
                ('address', models.TextField(blank=True, default='', help_text='Address text', verbose_name='address')),
                ('phone_no', models.CharField(blank=True, default='', help_text='phone number', max_length=20, verbose_name='phone number')),
                ('ecp_first_name', models.CharField(blank=True, default='', help_text="emergency contact person's first name", max_length=150, verbose_name="emergency contact person's first name")),
                ('ecp_last_name', models.CharField(blank=True, default='', help_text="emergency contact person's last name", max_length=150, verbose_name="emergency contact person's last name")),
                ('ecp_phone_no', models.CharField(blank=True, default='', help_text="emergency contact person's phone number", max_length=20, verbose_name="emergency contact person's phone number")),
                ('ecp_relationship', models.CharField(blank=True, default='', help_text='relationship with emergency contact person', max_length=40, verbose_name='relationship with emergency contact person')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='citizen_passport',
            field=models.CharField(blank=True, max_length=20, null=True, validators=[
                his.framework.validators.cid_passport_validator], verbose_name='หมายเลขประชาชน/หนังสือเดินทาง'),
        ),
        migrations.AddField(
            model_name='user',
            name='state',
            field=models.IntegerField(choices=[(1, 'REGISTER'), (2, 'ADD_OPTION'), (3, 'COMPLETED')], default=1, help_text="REGISTER after created account but didn't set password yet, ADD_OPTION after set password but no profile, COMPLETE after set profile.", verbose_name='state'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(blank=True, help_text='user', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userotp',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mobiledevice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mobile_devices', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='apitoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AlterUniqueTogether(
            name='userotp',
            unique_together=set([('user', 'ref', 'password')]),
        ),
        migrations.AlterUniqueTogether(
            name='mobiledevice',
            unique_together=set([('user', 'device_id', 'device_type')]),
        ),
    ]

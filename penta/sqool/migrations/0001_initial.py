# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-10-05 15:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from his.penta.showtime import utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('curator', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
        ('pentacenter', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockUserChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_at', models.DateTimeField(auto_now_add=True)),
                ('blocked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatChannel',
            fields=[
                ('basechannel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pentacenter.BaseChannel')),
                ('name', models.CharField(blank=True, default='', max_length=200)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='uploaded/sqool_content')),
                ('icon_url', models.URLField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('fb_is_support', models.BooleanField(db_index=True, default=False, help_text='Is customer support inbox from Facebook')),
                ('fb_page_name', models.CharField(blank=True, db_index=True, default='', max_length=64)),
                ('fb_recipient', models.CharField(blank=True, db_index=True, default='', max_length=32)),
                ('fb_inbox_id', models.CharField(blank=True, db_index=True, default='', max_length=32)),
                ('fb_latest_message_id', models.CharField(blank=True, default='', max_length=64)),
                ('fb_unread_count', models.IntegerField(default=0)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='curator.CuratorChannel')),
            ],
            bases=('pentacenter.basechannel',),
        ),
        migrations.CreateModel(
            name='FacebookUserCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook_id', models.CharField(max_length=64, unique=True)),
                ('full_name', models.CharField(blank=True, default='', max_length=200)),
                ('image_url', models.URLField(blank=True, max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('text', 'text'), ('image', 'image'), ('video', 'video'), ('file', 'file')], max_length=10)),
                ('content_file', models.FileField(blank=True, max_length=200, null=True, upload_to=utils.UploadToDir('uploaded/sqool_content'), verbose_name='Content file')),
                ('content_url', models.URLField(blank=True, max_length=400, null=True, verbose_name='Content URL')),
                ('content_thumbnail', models.ImageField(blank=True, max_length=200, null=True, upload_to=utils.UploadToDir('uploaded/sqool_content'), verbose_name='Thumbnail')),
                ('content_thumbnail_url', models.URLField(blank=True, max_length=400, null=True, verbose_name='Thumbnail URL')),
                ('user_read_count', models.IntegerField(default=0)),
                ('send_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('edit_at', models.DateTimeField(auto_now_add=True)),
                ('fb_message_id', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='sqool.ChatChannel')),
            ],
            options={
                'get_latest_by': '-send_at',
                'ordering': ('-send_at',),
            },
        ),
        migrations.CreateModel(
            name='MessageNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pentacenter.Notification')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='sqool.Message')),
            ],
            bases=('pentacenter.notification',),
        ),
        migrations.CreateModel(
            name='ReportMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_at', models.DateTimeField(auto_now_add=True)),
                ('remark', models.TextField(default='')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqool.Message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserChatSubscription',
            fields=[
                ('baseusersubscription_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pentacenter.BaseUserSubscription')),
                ('editable', models.BooleanField(db_index=True, default=False)),
                ('latest_read_time', models.DateTimeField(auto_now_add=True)),
                ('subscription_type', models.CharField(choices=[('subscribe_main', 'subscribe_main'), ('subscribe_help', 'subscribe_help'), ('channel_owner', 'channel_owner'), ('channel_admin', 'channel_admin')], max_length=20)),
                ('latest_read_message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sqool.Message')),
            ],
            bases=('pentacenter.baseusersubscription',),
        ),
        migrations.AddField(
            model_name='chatchannel',
            name='latest_message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sqool.Message'),
        ),
        migrations.AddField(
            model_name='chatchannel',
            name='sqool_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group'),
        ),
        migrations.AddField(
            model_name='blockuserchannel',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sqool.ChatChannel'),
        ),
        migrations.AddField(
            model_name='blockuserchannel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocker_user', to=settings.AUTH_USER_MODEL),
        ),
    ]
